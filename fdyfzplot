FDS <- function(data,output=FALSE,file=NULL){
  x <- data
  
  # 处理缺失值
  nindex <- sum(is.na(x))
  if (nindex != 0){
    nindex <- c(1:length(x))[is.na(x)]
    nindex1 <- nindex - 1
    nindex <- c(nindex1,nindex)
    nindex1 <- x[nindex1]
    x <- x[-nindex]
    print(list("fds","missing num:",nindex1))
  }
  sindex <- grep("sep",x)  # 节点
  fds    <- data.frame()     # 总数据框
  fdsx   <- data.frame()
  n1     <- length(sindex)
  # 由节点分段
  for (i in 1:(n1-1)){
    s1 <- sindex[i]
    s2 <- sindex[i+1]
    sindex1 <- c((s1 + 3) : (s2 - 2))
    vv      <- as.numeric(x[sindex1])
    days    <- x[c((s1 + 1),(s1 + 2))]
    days    <- as.Date(days)
    if (days[1] < days[2]){
      stop(c("wrong date ",as.character(x[(s1-1)])))  # 错误报告
    } else {    
      ddays <- as.numeric(days[1]-days[2])  # 日期向量
      date  <- days[1] - c(0 : ddays)
      fdsx  <- data.frame (date,vv)
      fdsx $ num <- x[(s1 - 1)]   # 视频编号
      fds   <- rbind(fds,fdsx)   # 加入总数据框
    }
  }
  # 处理末尾节点
  s1 <- sindex[n1]
  s2 <- length(x)
  sindex1 <- c((s1 + 3) : s2)
  vv      <- as.numeric(x[sindex1])
  days    <- x[c((s1 + 1),(s1 + 2))]
  days    <- as.Date(days)
  if (days[1] < days[2]){
    stop(c("wrong date ",as.character(x[(s1-1)])))
  } else {
    ddays <- as.numeric(days[1]-days[2])
    date  <- days[1] - c(0 : ddays)
    fdsx  <- data.frame (date,vv)
    fdsx $ num <- x[(s1 - 1)]
    fds   <- rbind(fds,fdsx)
  }
  fds $ num <- as.numeric(fds $ num)
  fds <- fds[order(fds $ date,fds $ num),]
  fds $ vvcum <- NA
  index <- as.numeric(names(table(fds $ num)))
  index <- index[order(index)]
  fds $ days <- NA
  for (i in 1 : length(index)){
    cum1 <- which(fds $ num == index[i])
    fds $ days [cum1] <- fds $ date[cum1] - 
      min(fds $ date[cum1])+1
  }
  for(i in 1:length(index)){
    fds $ vvcum[fds $ num == index[i]] <- cumsum(fds $ vv[
      fds $ num == index[i]])
  }
  return(fds)
}

FDSindex <- function (fds) {
  index1 <- function(x)names(table(x))
  order1 <- function(x)x[order(x)]
  index <- list()
  # 编号，日期，时长索引
  x <- as.numeric(index1(fds $ num))
  index $ num <- order1(x)
  y <- data.frame(num = x)
  y $ color <- NA
  y $ color [y $ num <31] <- "orange"
  y $ color [y $ num >=31 & y $ num < 65] <- "red2"
  y $ color [y $ num >=65 & y $ num < 84] <- "darkgreen"
  y $ color [y $ num >= 84] <- "lightblue"
  y $ cluster [y $ num <31] <- 1
  y $ cluster [y $ num >=31 & y $ num < 65] <- 2
  y $ cluster [y $ num >=65 & y $ num < 84] <- 3
  y $ cluster [y $ num >= 84] <- 4
  index $ color <- y
  x <- as.Date(index1(fds $ date))
  index $ date <- order1(x)
  x <- as.numeric(index1(fds $ days))
  index $ days <- order1(x)
  # 每日集数，绘图集数
  x <- c()
  for (i in 1 : length(index $ date)){
    x[i] <- length(fds $ num[fds $ date == index $ date[i]])
  }
  index$count <- data.frame(date = index $ date,count = x)
  return(index)
}

# need xxz,tt = ""
tt <- "2014-10-31"
fds <- FDS(xxz)
fds <- fds[-which( fds$date > as.Date(tt)),]
index <- FDSindex(fds)

library("ggplot2")
library("reshape2")
library("scales")

# 1-1 p1


# 显示指标
print(paste("total =",sum(fds$vvcum[ fds$date == max(fds$date)])))
print(paste("maxnum = ", max(index$num)))

n <- length(index$date)
vv <- vector(length = n)
for(i in seq(n)) vv[i] <- sum( fds$vv[ fds$date == index$date[i]])

fdsx <- data.frame(日期 = index$date, 播放量 = vv,
                   积累播放量 = cumsum(vv),
                   更新集数 = index$count$count)
fdsx1 <- melt(data = fdsx, id.vars = "日期")

p1 <- qplot(日期,value,data=fdsx1,geom="line") + 
  facet_grid(variable ~ .,scales = "free_y") +
  theme( text = element_text(family = "微软雅黑")) + 
  labs(y = "",title = "\"飞碟一分钟\" 视频更新与播放量趋势") +
  scale_x_date(
#               breaks=as.Date(c("2012-12-10",
#                                "2014-01-03","2014-06-26",
#                                "2014-09-29")),
#               label = c("2012-12-10","14年春节","6月停更","14年国庆"),
               label=date_format(c("%Y-%m")))



# 2-2 p2
# NEED : maxnum
maxnum <- 166
fdsmax <- fds[fds $ date == max(fds $ date) &
              fds$num <= maxnum,]
m1 <- mean( fdsmax$vvcum[ fdsmax$num < 51 ])
m2 <- mean( fdsmax$vvcum[ fdsmax$num >= 51 & 
                            fdsmax$num < 116])
m3 <- mean( fdsmax$vvcum[ fdsmax$num >= 116])
m <- signif(c(m1,m2,m3) / 1e4,digits= 4)
fdsmax$color[ fdsmax$num < 51] <- paste(
  "节前(",m[1], sep="")
fdsmax$color[ fdsmax$num >= 51 & fdsmax$num < 116] <- paste(
  "节后(",m[2],sep="")
fdsmax$color[ fdsmax$num >= 116] <-  paste(
  "八月后(",m[3],sep="")
fdsmax$color <- paste(fdsmax$color,"万)",sep="")

x1 <- fdsmax$color
y <- ordered(x1,levels=names(table(x1))[c(grep("节前",names(table(x1))),
                                          grep("节后",names(table(x1))),
                                          grep("八",names(table(x1))))])
fdsmax$color1 <- y

p2 <- qplot(num,vvcum,data = fdsmax) + 
  geom_abline() +
  facet_grid(.~color1,scales = "free_x",) + 
  theme(text = element_text(family = "微软雅黑")) +
  labs( x = paste("视频编号\n",paste(paste("数据截止",
                                       max(fdsmax $ date),sep=""),
                                 paste(paste(",收集1-",max(fdsmax $ num),
                                             sep=""),"期视频",
                                       sep=""),sep=""),sep=""),
        y = "播放总量(百万)",
        title = "\"飞碟一分钟\"各视频播放总量对比")    

# p31

zhan <- c(1204,921,1568,5235,593)
ding <- c(638,438,987,1159,780)
cai <-  c(24,23,31,60,39)
pin <-  c(76,61,59,689,30)
cang <- c(343,228,783,506,455)
num <-  c(162 : 166)
vcum <- c()
for( i in 1:length(num))vcum[i] <- fds$vvcum[fds$days == 7 &
                                               fds$num == num[i]]

ss1 <- data.frame(七日播量 = vcum,
                  站外 = zhan,
                  顶 = ding,
                  踩 = cai,
                  评论 = pin,
                  收藏 = cang,
                  num = num)

ss2 <- melt(ss1,id.vars = "num")

p3 <- ggplot(ss2,aes(x = num)) +
  theme(text = element_text(family="微软雅黑")) 

p3 <- p3 + geom_line(aes(y=value)) +
  facet_grid(variable ~ .,scale = "free") +
  labs(y = "",x = "",title="\"一分钟\"一周视频互动对比") +
  scale_x_continuous(breaks=num,
                     labels=paste(num,c("喝酒不烂醉","科学增肥",
                                        "正确洗脸","认识早泄",
                                        "打包技巧"),sep=""))


print("p1,p2,p3")
